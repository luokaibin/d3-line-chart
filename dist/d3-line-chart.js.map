{"version":3,"file":"d3-line-chart.js","sources":["../src/types.ts","../src/utils.ts","../src/d3-line-chart.ts"],"sourcesContent":["// 折线图配置接口\nexport interface LineChartConfig {\n  lineColor?: string;        // 折线颜色\n  showShadow?: boolean;      // 是否显示阴影\n  gridColor?: string;        // 网格线颜色\n  enableAnimation?: boolean; // 是否启用动画\n  animationDuration?: number; // 动画时长\n  axisTextColor?: string;    // 坐标轴文本颜色\n  axisTextSize?: string;     // 坐标轴文本字体大小\n  curveType?: 'linear' | 'curve'; // 折线类型：直线或曲线\n  margin?: {                 // 图表边距\n    top?: number;            // 上边距\n    right?: number;          // 右边距\n    bottom?: number;         // 下边距\n    left?: number;           // 左边距\n  };\n}\n\n// 数据点接口\nexport interface DataPoint {\n  x: number;\n  y: number;\n}\n\n// 关键点接口\nexport interface KeyPoint extends DataPoint {\n  render: string; // 关键点的渲染HTML\n}\n\n// 关键刻度点接口\nexport interface KeyTick {\n  x: number;\n  label: string;\n}\n\n// 默认配置\nexport const DEFAULT_CONFIG: LineChartConfig = {\n  lineColor: '#3498db',\n  showShadow: true,\n  gridColor: '#e0e0e0',\n  enableAnimation: true,\n  animationDuration: 1000,\n  axisTextColor: '#333333',\n  axisTextSize: '12px',\n  curveType: 'linear',\n  margin: {\n    top: 20,\n    right: 30,\n    bottom: 40,\n    left: 50\n  }\n};\n","import { DataPoint } from './types';\n\n/**\n * 计算点到线段的垂直距离\n * @param point 点\n * @param lineStart 线段起点\n * @param lineEnd 线段终点\n * @returns 垂直距离\n */\nexport function perpendicularDistance(point: DataPoint, lineStart: DataPoint, lineEnd: DataPoint): number {\n  if (lineStart.x === lineEnd.x) {\n    return Math.abs(point.x - lineStart.x);\n  }\n  \n  const slope = (lineEnd.y - lineStart.y) / (lineEnd.x - lineStart.x);\n  const intercept = lineStart.y - (slope * lineStart.x);\n  \n  // 点到直线的距离公式: |ax + by + c| / sqrt(a^2 + b^2)\n  // 其中直线方程为 ax + by + c = 0\n  // 转换为 y = mx + b 形式，则 a = -m, b = 1, c = -b\n  const a = -slope;\n  const b = 1;\n  const c = -intercept;\n  \n  return Math.abs(a * point.x + b * point.y + c) / Math.sqrt(a * a + b * b);\n}\n\n/**\n * Ramer-Douglas-Peucker 算法实现数据抽稀\n * @param points 原始数据点\n * @param epsilon 阈值，越小保留的点越多\n * @returns 抽稀后的数据点\n */\nexport function rdpAlgorithm(points: DataPoint[], epsilon: number): DataPoint[] {\n  if (points.length <= 2) {\n    return [...points];\n  }\n  \n  // 找到距离最远的点\n  let maxDistance = 0;\n  let maxIndex = 0;\n  \n  const firstPoint = points[0];\n  const lastPoint = points[points.length - 1];\n  \n  for (let i = 1; i < points.length - 1; i++) {\n    const distance = perpendicularDistance(points[i], firstPoint, lastPoint);\n    if (distance > maxDistance) {\n      maxDistance = distance;\n      maxIndex = i;\n    }\n  }\n  \n  // 如果最大距离大于阈值，则递归处理\n  if (maxDistance > epsilon) {\n    const leftPoints = rdpAlgorithm(points.slice(0, maxIndex + 1), epsilon);\n    const rightPoints = rdpAlgorithm(points.slice(maxIndex), epsilon);\n    \n    // 合并结果，避免重复点\n    return [...leftPoints.slice(0, -1), ...rightPoints];\n  } else {\n    // 如果最大距离小于阈值，则只保留首尾两点\n    return [firstPoint, lastPoint];\n  }\n}\n\n/**\n * 格式化大数字，如50000 -> 50K\n * @param yTicks Y轴刻度值数组\n * @returns 格式化后的对象，键为原始值，值为格式化后的字符串\n */\nexport function formatLargeNumber(yTicks: number[]): Record<number, string> {\n  if (!yTicks || yTicks.length === 0) {\n    return {};\n  }\n  \n  // 创建结果对象\n  const result: Record<number, string> = {};\n  \n  // 格式化函数，根据小数位格式化数字\n  const format = (value: number, decimal: number): string => {\n    if (Math.abs(value) >= 1000000) {\n      return (value / 1000000).toFixed(decimal) + 'M';\n    } else if (Math.abs(value) >= 1000) {\n      return (value / 1000).toFixed(decimal) + 'K';\n    } else {\n      return decimal > 0 ? value.toFixed(decimal) : value.toString();\n    }\n  };\n  \n  // 检查格式化后是否有重复值\n  const hasUniqueFormats = (decimal: number): boolean => {\n    const formattedValues = yTicks.map(value => format(value, decimal));\n    const uniqueValues = new Set(formattedValues);\n    return uniqueValues.size === formattedValues.length;\n  };\n  \n  // 从0位小数开始，逐步增加小数位，直到没有重复值\n  let decimal = 0;\n  while (!hasUniqueFormats(decimal) && decimal < 6) {\n    decimal++;\n  }\n  \n  // 使用确定的小数位格式化所有值\n  yTicks.forEach(value => {\n    result[value] = format(value, decimal);\n  });\n  \n  return result;\n}\n\n/**\n * 防抖函数\n * @param fn 要执行的函数\n * @param delay 延迟时间\n * @returns 防抖处理后的函数\n */\nexport function debounce<T extends (...args: any[]) => any>(fn: T, delay: number): (...args: Parameters<T>) => void {\n  let timer: number | null = null;\n  \n  return function(this: any, ...args: Parameters<T>): void {\n    if (timer !== null) {\n      window.clearTimeout(timer);\n    }\n    \n    timer = window.setTimeout(() => {\n      fn.apply(this, args);\n      timer = null;\n    }, delay);\n  };\n}","import * as d3 from 'd3';\nimport { LineChartConfig, DataPoint, KeyPoint, KeyTick, DEFAULT_CONFIG } from './types';\nimport { rdpAlgorithm, formatLargeNumber, debounce } from './utils';\n\n/**\n * D3折线图Web Component\n */\nexport class D3LineChart extends HTMLElement {\n  // Shadow DOM\n  private shadow: ShadowRoot;\n  \n  // 容器元素\n  private container: HTMLDivElement;\n  private svgContainer: SVGSVGElement;\n  private canvasContainer: HTMLCanvasElement;\n  \n  // 画布上下文\n  private ctx: CanvasRenderingContext2D | null = null;\n  \n  // 数据和配置\n  private data: DataPoint[] = [];\n  private keyPoints: KeyPoint[] = [];\n  private keyTicks: KeyTick[] = [];\n  private config: LineChartConfig = { ...DEFAULT_CONFIG };\n  \n  // 尺寸和比例尺\n  private width: number = 0;\n  private height: number = 0;\n  private margin = { top: 20, right: 30, bottom: 40, left: 50 };\n  private xScale: d3.ScaleLinear<number, number> = d3.scaleLinear();\n  private yScale: d3.ScaleLinear<number, number> = d3.scaleLinear();\n  \n  // 动画相关\n  private animationProgress: number = 0;\n  private animationId: number | null = null;\n  \n  // 重绘防抖\n  private debouncedResize: () => void;\n  \n  constructor() {\n    super();\n    \n    // 创建Shadow DOM\n    this.shadow = this.attachShadow({ mode: 'open' });\n    \n    // 创建样式\n    const style = document.createElement('style');\n    style.textContent = `\n      :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      \n      .container {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n      \n      canvas {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      \n      svg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n      }\n      \n      .key-point {\n        position: absolute;\n        transform: translateX(-50%);\n        z-index: 10;\n        pointer-events: auto;\n      }\n    `;\n    \n    // 创建容器\n    this.container = document.createElement('div');\n    this.container.className = 'container';\n    \n    // 创建Canvas\n    this.canvasContainer = document.createElement('canvas');\n    this.ctx = this.canvasContainer.getContext('2d');\n    \n    // 创建SVG\n    this.svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    \n    // 添加元素到Shadow DOM\n    this.container.appendChild(this.canvasContainer);\n    this.container.appendChild(this.svgContainer);\n    this.shadow.appendChild(style);\n    this.shadow.appendChild(this.container);\n    \n    // 初始化防抖重绘函数\n    this.debouncedResize = debounce(this.resize.bind(this), 200);\n    \n    // 监听窗口大小变化\n    this.setupResizeObserver();\n  }\n  \n  /**\n   * 当元素被添加到DOM时调用\n   */\n  connectedCallback() {\n    this.resize();\n  }\n  \n  /**\n   * 当元素从DOM中移除时调用\n   */\n  disconnectedCallback() {\n    // 清除动画\n    if (this.animationId !== null) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n  \n  /**\n   * 设置配置\n   * @param config 配置对象\n   */\n  setConfig(config: Partial<LineChartConfig>) {\n    this.config = { ...this.config, ...config };\n    \n    // 更新margin配置\n    if (config.margin) {\n      this.margin = {\n        top: config.margin.top !== undefined ? config.margin.top : this.margin.top,\n        right: config.margin.right !== undefined ? config.margin.right : this.margin.right,\n        bottom: config.margin.bottom !== undefined ? config.margin.bottom : this.margin.bottom,\n        left: config.margin.left !== undefined ? config.margin.left : this.margin.left\n      };\n    }\n    \n    this.render();\n    return this;\n  }\n  \n  /**\n   * 获取margin配置\n   */\n  getMargin(): { top: number; right: number; bottom: number; left: number } {\n    return { ...this.margin };\n  }\n  \n  /**\n   * 设置是否启用动画\n   * @param enable 是否启用\n   * @param duration 动画时长（毫秒）\n   */\n  setEnableAnimation(enable: boolean, duration?: number) {\n    this.config.enableAnimation = enable;\n    if (duration !== undefined) {\n      this.config.animationDuration = duration;\n    }\n    return this;\n  }\n  \n  /**\n   * 设置数据\n   * @param data 数据点数组\n   */\n  setData(data: DataPoint[]) {\n    this.data = [...data];\n    \n    // 重置动画进度\n    this.animationProgress = 0;\n    \n    // 更新比例尺\n    this.updateScales();\n    \n    // 渲染图表\n    this.render();\n    return this;\n  }\n  \n  /**\n   * 设置关键点\n   * @param keyPoints 关键点数组\n   */\n  setKeyPoints(keyPoints: KeyPoint[]) {\n    this.keyPoints = [...keyPoints];\n    this.render();\n    return this;\n  }\n  \n  /**\n   * 设置关键刻度点\n   * @param keyTicks 关键刻度点数组\n   */\n  setKeyTicks(keyTicks: KeyTick[]) {\n    this.keyTicks = [...keyTicks];\n    this.render();\n    return this;\n  }\n  \n  /**\n   * 获取配置\n   */\n  getConfig(): LineChartConfig {\n    return { ...this.config };\n  }\n  \n  /**\n   * 获取是否启用动画\n   */\n  getEnableAnimation(): boolean {\n    return !!this.config.enableAnimation;\n  }\n  \n  /**\n   * 获取动画时长\n   */\n  getAnimationDuration(): number {\n    return this.config.animationDuration || DEFAULT_CONFIG.animationDuration!;\n  }\n  \n  /**\n   * 获取网格线颜色\n   */\n  getGridColor(): string {\n    return this.config.gridColor || DEFAULT_CONFIG.gridColor!;\n  }\n  \n  /**\n   * 获取折线颜色\n   */\n  getLineColor(): string {\n    return this.config.lineColor || DEFAULT_CONFIG.lineColor!;\n  }\n  \n  /**\n   * 获取是否显示阴影\n   */\n  getShowShadow(): boolean {\n    return this.config.showShadow !== undefined ? this.config.showShadow : DEFAULT_CONFIG.showShadow!;\n  }\n  \n  /**\n   * 获取坐标轴文本颜色\n   */\n  getAxisTextColor(): string {\n    return this.config.axisTextColor || DEFAULT_CONFIG.axisTextColor!;\n  }\n  \n  /**\n   * 获取坐标轴文本大小\n   */\n  getAxisTextSize(): string {\n    return this.config.axisTextSize || DEFAULT_CONFIG.axisTextSize!;\n  }\n  \n  /**\n   * 获取数据\n   */\n  getData(): DataPoint[] {\n    return [...this.data];\n  }\n  \n  /**\n   * 获取关键点\n   */\n  getKeyPoints(): KeyPoint[] {\n    return [...this.keyPoints];\n  }\n  \n  /**\n   * 获取关键刻度点\n   */\n  getKeyTicks(): KeyTick[] {\n    return [...this.keyTicks];\n  }\n  \n  /**\n   * 获取曲线类型\n   */\n  getCurveType(): 'linear' | 'curve' {\n    return this.config.curveType || DEFAULT_CONFIG.curveType!;\n  }\n  \n  /**\n   * 设置ResizeObserver监听大小变化\n   */\n  private setupResizeObserver() {\n    // 使用ResizeObserver监听容器大小变化\n    const resizeObserver = new ResizeObserver(() => {\n      this.debouncedResize();\n    });\n    \n    resizeObserver.observe(this);\n    \n    // 初始调整大小\n    this.resize();\n  }\n  \n  /**\n   * 调整大小\n   */\n  private resize() {\n    const rect = this.getBoundingClientRect();\n    this.width = rect.width;\n    this.height = rect.height;\n    \n    // 设置Canvas大小\n    this.canvasContainer.width = this.width * window.devicePixelRatio;\n    this.canvasContainer.height = this.height * window.devicePixelRatio;\n    this.canvasContainer.style.width = `${this.width}px`;\n    this.canvasContainer.style.height = `${this.height}px`;\n    \n    // 调整Canvas缩放\n    if (this.ctx) {\n      this.ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n    \n    // 更新比例尺\n    this.updateScales();\n    \n    // 重新渲染\n    this.render();\n  }\n  \n  /**\n   * 更新比例尺\n   */\n  private updateScales() {\n    if (this.data.length === 0) return;\n    \n    // 计算数据范围\n    const xExtent = d3.extent(this.data, d => d.x) as [number, number];\n    const yExtent = d3.extent(this.data, d => d.y) as [number, number];\n    \n    // 设置比例尺\n    this.xScale = d3.scaleLinear()\n      .domain(xExtent)\n      .range([this.margin.left, this.width - this.margin.right]);\n    \n    this.yScale = d3.scaleLinear()\n      .domain(yExtent)\n      .range([this.height - this.margin.bottom, this.margin.top]);\n  }\n  \n  /**\n   * 渲染图表\n   */\n  private render() {\n    if (!this.ctx || this.data.length === 0) return;\n    \n    // 清除画布\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    \n    // 清除SVG内容\n    while (this.svgContainer.firstChild) {\n      this.svgContainer.removeChild(this.svgContainer.firstChild);\n    }\n    \n    // 移除所有关键点DOM元素\n    const keyPointElements = this.shadow.querySelectorAll('.key-point');\n    keyPointElements.forEach(el => el.remove());\n    \n    // 绘制网格线和坐标轴\n    this.drawGridAndAxis();\n    \n    // 绘制折线\n    if (this.config.enableAnimation) {\n      this.startAnimation();\n    } else {\n      this.drawLine(1);\n      this.renderKeyPoints();\n    }\n  }\n  \n  /**\n   * 绘制网格线和坐标轴\n   */\n  private drawGridAndAxis() {\n    // 清除之前的元素\n    d3.select(this.svgContainer).selectAll('*').remove();\n    \n    const g = d3.select(this.svgContainer);\n    \n    // 生成Y轴刻度\n    const yTicks = this.yScale.ticks(5);\n    \n    // 格式化刻度值\n    const formattedTicksMap = formatLargeNumber(yTicks);\n\n\n    // 测量文本宽度的临时SVG文本元素\n    const tempText = g.append('text')\n      .attr('class', 'temp-text')\n      .attr('font-size', this.getAxisTextSize())\n      .style('visibility', 'hidden');\n    \n    // 计算格式化后的数字宽度\n    const getTextWidth = (text: string): number => {\n      tempText.text(text);\n      return (tempText.node() as SVGTextElement)?.getBBox().width || 0;\n    };\n    \n    // 计算最大宽度\n    const formattedValues = Object.values(formattedTicksMap);\n    const maxWidth = Math.max(...formattedValues.map(getTextWidth));\n\n    // 计算新的左侧边距（文本宽度 + margin.left + 10）\n    const newLeftMargin = this.margin.left + maxWidth + 10;\n\n    // 移除临时文本元素\n    tempText.remove();\n\n    // 绘制横向网格线（Y轴网格线）\n    g.selectAll('.grid-line-y')\n      .data(yTicks)\n      .enter()\n      .append('line')\n      .attr('class', 'grid-line-y')\n      .attr('x1', newLeftMargin)\n      .attr('x2', this.width - this.margin.right)\n      .attr('y1', d => this.yScale(d))\n      .attr('y2', d => this.yScale(d))\n      .attr('stroke', this.getGridColor())\n      .attr('stroke-dasharray', '3,3')\n      .attr('stroke-width', 1);\n    \n    // 绘制Y轴刻度值\n    g.selectAll('.y-axis-label')\n      .data(yTicks)\n      .enter()\n      .append('text')\n      .attr('class', 'y-axis-label')\n      .attr('x', newLeftMargin -10) // 根据文本宽度调整位置\n      .attr('y', d => this.yScale(d))\n      .attr('dy', '0.32em')\n      .attr('text-anchor', 'end')\n      .attr('fill', this.getAxisTextColor())\n      .attr('font-size', this.getAxisTextSize())\n      .text(d => formattedTicksMap[d]);\n    \n    // 绘制X轴\n    g.append('line')\n      .attr('class', 'x-axis')\n      .attr('x1', newLeftMargin)\n      .attr('x2', this.width - this.margin.right)\n      .attr('y1', this.height - this.margin.bottom)\n      .attr('y2', this.height - this.margin.bottom)\n      .attr('stroke', this.getGridColor())\n      .attr('stroke-dasharray', '3,3')\n      .attr('stroke-width', 1);\n    \n    // 绘制关键刻度点\n    if (this.keyTicks.length > 0) {\n      g.selectAll('.key-tick')\n        .data(this.keyTicks)\n        .enter()\n        .append('text')\n        .attr('class', 'key-tick')\n        .attr('x', d => this.xScale(d.x))\n        .attr('y', this.height - this.margin.bottom + 20)\n        .attr('text-anchor', 'middle')\n        .attr('fill', this.getAxisTextColor())\n        .attr('font-size', this.getAxisTextSize())\n        .text(d => d.label);\n    }\n  }\n  \n  /**\n   * 绘制折线\n   * @param progress 动画进度 (0-1)\n   */\n  private drawLine(progress: number) {\n    if (!this.ctx || this.data.length === 0) return;\n    \n    // 根据配置选择绘制方式\n    if (this.getCurveType() === 'curve') {\n      this.drawCurveLine(progress);\n    } else {\n      this.drawLinearLine(progress);\n    }\n  }\n  \n  /**\n   * 绘制直线折线\n   * @param progress 动画进度 (0-1)\n   */\n  private drawLinearLine(progress: number) {\n    if (!this.ctx || this.data.length === 0) return;\n    \n    // 获取当前的左侧边距\n    const g = d3.select(this.svgContainer);\n    const xAxisLine = g.select('.x-axis');\n    let leftMargin = this.margin.left;\n    \n    // 如果已经设置了新的左侧边距，则使用它\n    if (xAxisLine.attr('x1')) {\n      leftMargin = parseFloat(xAxisLine.attr('x1'));\n    }\n    \n    // 应用数据抽稀\n    const epsilon = 0.6; // 抽稀阈值\n    const simplifiedData = rdpAlgorithm(this.data, epsilon);\n    \n    // 计算动画进度对应的数据点数量\n    const dataLength = Math.floor(simplifiedData.length * progress);\n    const animatedData = simplifiedData.slice(0, dataLength);\n    \n    if (animatedData.length < 2) return;\n    \n    // 创建新的比例尺，使用调整后的左侧边距\n    const adjustedXScale = d3.scaleLinear()\n      .domain([d3.min(this.data, d => d.x) || 0, d3.max(this.data, d => d.x) || 0])\n      .range([leftMargin, this.width - this.margin.right]);\n    \n    // 绘制折线\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.moveTo(adjustedXScale(animatedData[0].x), this.yScale(animatedData[0].y));\n    \n    for (let i = 1; i < animatedData.length; i++) {\n      this.ctx.lineTo(adjustedXScale(animatedData[i].x), this.yScale(animatedData[i].y));\n    }\n    \n    this.ctx.strokeStyle = this.getLineColor();\n    this.ctx.lineWidth = 2;\n    this.ctx.stroke();\n    \n    // 绘制阴影\n    if (this.getShowShadow()) {\n      // 继续路径以闭合区域\n      this.ctx.lineTo(adjustedXScale(animatedData[animatedData.length - 1].x), this.height - this.margin.bottom);\n      this.ctx.lineTo(adjustedXScale(animatedData[0].x), this.height - this.margin.bottom);\n      this.ctx.closePath();\n      \n      // 创建渐变\n      const gradient = this.ctx.createLinearGradient(0, this.margin.top, 0, this.height - this.margin.bottom);\n      const color = this.getLineColor();\n      gradient.addColorStop(0, `${color}80`); // 50% 透明度\n      gradient.addColorStop(1, `${color}00`); // 0% 透明度\n      \n      this.ctx.fillStyle = gradient;\n      this.ctx.fill();\n    }\n    \n    this.ctx.restore();\n  }\n  \n  /**\n   * 绘制曲线折线\n   * @param progress 动画进度 (0-1)\n   */\n  private drawCurveLine(progress: number) {\n    if (!this.ctx || this.data.length === 0) return;\n    \n    // 获取当前的左侧边距\n    const g = d3.select(this.svgContainer);\n    const xAxisLine = g.select('.x-axis');\n    let leftMargin = this.margin.left;\n    \n    // 如果已经设置了新的左侧边距，则使用它\n    if (xAxisLine.attr('x1')) {\n      leftMargin = parseFloat(xAxisLine.attr('x1'));\n    }\n    \n    // 应用数据抽稀\n    const epsilon = 0.6; // 抽稀阈值\n    const simplifiedData = rdpAlgorithm(this.data, epsilon);\n    \n    // 计算动画进度对应的数据点数量\n    const dataLength = Math.floor(simplifiedData.length * progress);\n    const animatedData = simplifiedData.slice(0, dataLength);\n    \n    if (animatedData.length < 2) return;\n    \n    // 创建新的比例尺，使用调整后的左侧边距\n    const adjustedXScale = d3.scaleLinear()\n      .domain([d3.min(this.data, d => d.x) || 0, d3.max(this.data, d => d.x) || 0])\n      .range([leftMargin, this.width - this.margin.right]);\n    \n    // 使用D3的line生成器和曲线插值器\n    const line = d3.line<DataPoint>()\n      .x(d => adjustedXScale(d.x))\n      .y(d => this.yScale(d.y))\n      .curve(d3.curveCatmullRom.alpha(0.5)); // 使用CatmullRom曲线，alpha控制曲线张力\n    \n    // 获取路径数据\n    const pathData = line(animatedData);\n    \n    if (!pathData) return;\n    \n    // 绘制曲线\n    this.ctx.save();\n    this.ctx.beginPath();\n    \n    // 使用路径数据绘制\n    const path = new Path2D(pathData);\n    this.ctx.strokeStyle = this.getLineColor();\n    this.ctx.lineWidth = 2;\n    this.ctx.stroke(path);\n    \n    // 绘制阴影\n    if (this.getShowShadow()) {\n      this.ctx.beginPath();\n      \n      // 创建一个新的路径用于填充阴影区域\n      const areaPath = new Path2D(pathData);\n      \n      // 添加闭合区域的路径\n      areaPath.lineTo(adjustedXScale(animatedData[animatedData.length - 1].x), this.height - this.margin.bottom);\n      areaPath.lineTo(adjustedXScale(animatedData[0].x), this.height - this.margin.bottom);\n      areaPath.closePath();\n      \n      // 创建渐变\n      const gradient = this.ctx.createLinearGradient(0, this.margin.top, 0, this.height - this.margin.bottom);\n      const color = this.getLineColor();\n      gradient.addColorStop(0, `${color}80`); // 50% 透明度\n      gradient.addColorStop(1, `${color}00`); // 0% 透明度\n      \n      this.ctx.fillStyle = gradient;\n      this.ctx.fill(areaPath);\n    }\n    \n    this.ctx.restore();\n  }\n  \n  /**\n   * 渲染关键点\n   */\n  private renderKeyPoints() {\n    // 过滤出在坐标范围内的关键点\n    const validKeyPoints = this.keyPoints.filter(point => {\n      const x = this.xScale(point.x);\n      const y = this.yScale(point.y);\n      return (\n        x >= this.margin.left &&\n        x <= this.width - this.margin.right &&\n        y >= this.margin.top &&\n        y <= this.height - this.margin.bottom\n      );\n    });\n    \n    // 为每个关键点创建DOM元素\n    validKeyPoints.forEach(point => {\n      const keyPointElement = document.createElement('div');\n      keyPointElement.className = 'key-point';\n      \n      // 计算X轴位置\n      const xAxisY = this.height - this.margin.bottom;\n      \n      // 获取数据点的Y坐标\n      const pointY = this.yScale(point.y);\n      \n      // 设置左侧位置（水平居中）\n      keyPointElement.style.left = `${this.xScale(point.x)}px`;\n      \n      // 创建临时元素来测量高度\n      const tempElement = document.createElement('div');\n      tempElement.className = 'key-point';\n      tempElement.innerHTML = point.render;\n      tempElement.style.position = 'absolute';\n      tempElement.style.visibility = 'hidden';\n      this.container.appendChild(tempElement);\n      \n      // 获取元素高度\n      const elementHeight = tempElement.offsetHeight;\n      \n      // 移除临时元素\n      this.container.removeChild(tempElement);\n      \n      // 定义接近X轴的阈值（例如：距离X轴不到元素高度的2倍）\n      const proximityThreshold = elementHeight * 2;\n      \n      // 判断点是否靠近X轴\n      const isCloseToXAxis = (xAxisY - pointY) < proximityThreshold;\n      \n      // 计算top位置\n      let topPosition;\n      \n      if (isCloseToXAxis) {\n        // 如果靠近X轴，将关键点显示在数据点上方\n        topPosition = pointY - elementHeight;\n        \n        // 确保不超出上边界\n        if (topPosition < this.margin.top) {\n          topPosition = this.margin.top;\n        }\n      } else {\n        // 如果不靠近X轴，保持在数据点位置\n        topPosition = pointY;\n      }\n      \n      // 设置top位置\n      keyPointElement.style.top = `${topPosition}px`;\n      \n      keyPointElement.innerHTML = point.render;\n      \n      this.container.appendChild(keyPointElement);\n    });\n  }\n  \n  /**\n   * 开始动画\n   */\n  private startAnimation() {\n    // 清除之前的动画\n    if (this.animationId !== null) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    \n    // 重置动画进度\n    this.animationProgress = 0;\n    \n    // 动画开始时间\n    const startTime = performance.now();\n    const duration = this.getAnimationDuration();\n    \n    // 动画函数\n    const animate = (currentTime: number) => {\n      // 计算动画进度\n      const elapsed = currentTime - startTime;\n      this.animationProgress = Math.min(elapsed / duration, 1);\n      \n      // 清除画布\n      if (this.ctx) {\n        this.ctx.clearRect(0, 0, this.width, this.height);\n      }\n      \n      // 绘制折线\n      this.drawLine(this.animationProgress);\n      \n      // 如果动画未完成，继续下一帧\n      if (this.animationProgress < 1) {\n        this.animationId = requestAnimationFrame(animate);\n      } else {\n        // 动画完成，渲染关键点\n        this.renderKeyPoints();\n        this.animationId = null;\n      }\n    };\n    \n    // 开始动画\n    this.animationId = requestAnimationFrame(animate);\n  }\n}\n\n// 注册Web Component\ncustomElements.define('d3-line-chart', D3LineChart);\n"],"names":["d3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAmCA;IACO,MAAM,cAAc,GAAoB;IAC7C,IAAA,SAAS,EAAE,SAAS;IACpB,IAAA,UAAU,EAAE,IAAI;IAChB,IAAA,SAAS,EAAE,SAAS;IACpB,IAAA,eAAe,EAAE,IAAI;IACrB,IAAA,iBAAiB,EAAE,IAAI;IACvB,IAAA,aAAa,EAAE,SAAS;IACxB,IAAA,YAAY,EAAE,MAAM;IACpB,IAAA,SAAS,EAAE,QAAQ;IACnB,IAAA,MAAM,EAAE;IACN,QAAA,GAAG,EAAE,EAAE;IACP,QAAA,KAAK,EAAE,EAAE;IACT,QAAA,MAAM,EAAE,EAAE;IACV,QAAA,IAAI,EAAE;IACP;KACF;;ICjDD;;;;;;IAMG;aACa,qBAAqB,CAAC,KAAgB,EAAE,SAAoB,EAAE,OAAkB,EAAA;QAC9F,IAAI,SAAS,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,EAAE;IAC7B,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;;QAGxC,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACnE,IAAA,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;;;;IAKrD,IAAA,MAAM,CAAC,GAAG,CAAC,KAAK;QAChB,MAAM,CAAC,GAAG,CAAC;IACX,IAAA,MAAM,CAAC,GAAG,CAAC,SAAS;IAEpB,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3E;IAEA;;;;;IAKG;IACa,SAAA,YAAY,CAAC,MAAmB,EAAE,OAAe,EAAA;IAC/D,IAAA,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;IACtB,QAAA,OAAO,CAAC,GAAG,MAAM,CAAC;;;QAIpB,IAAI,WAAW,GAAG,CAAC;QACnB,IAAI,QAAQ,GAAG,CAAC;IAEhB,IAAA,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC;QAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAE3C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1C,QAAA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,SAAS,CAAC;IACxE,QAAA,IAAI,QAAQ,GAAG,WAAW,EAAE;gBAC1B,WAAW,GAAG,QAAQ;gBACtB,QAAQ,GAAG,CAAC;;;;IAKhB,IAAA,IAAI,WAAW,GAAG,OAAO,EAAE;IACzB,QAAA,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC;IACvE,QAAA,MAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC;;IAGjE,QAAA,OAAO,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,WAAW,CAAC;;aAC9C;;IAEL,QAAA,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC;;IAElC;IAEA;;;;IAIG;IACG,SAAU,iBAAiB,CAAC,MAAgB,EAAA;QAChD,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IAClC,QAAA,OAAO,EAAE;;;QAIX,MAAM,MAAM,GAA2B,EAAE;;IAGzC,IAAA,MAAM,MAAM,GAAG,CAAC,KAAa,EAAE,OAAe,KAAY;YACxD,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,EAAE;IAC9B,YAAA,OAAO,CAAC,KAAK,GAAG,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,GAAG;;iBAC1C,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;IAClC,YAAA,OAAO,CAAC,KAAK,GAAG,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,GAAG;;iBACvC;IACL,YAAA,OAAO,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE;;IAElE,KAAC;;IAGD,IAAA,MAAM,gBAAgB,GAAG,CAAC,OAAe,KAAa;IACpD,QAAA,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACnE,QAAA,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC;IAC7C,QAAA,OAAO,YAAY,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM;IACrD,KAAC;;QAGD,IAAI,OAAO,GAAG,CAAC;QACf,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE;IAChD,QAAA,OAAO,EAAE;;;IAIX,IAAA,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;YACrB,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC;IACxC,KAAC,CAAC;IAEF,IAAA,OAAO,MAAM;IACf;IAEA;;;;;IAKG;IACa,SAAA,QAAQ,CAAoC,EAAK,EAAE,KAAa,EAAA;QAC9E,IAAI,KAAK,GAAkB,IAAI;QAE/B,OAAO,UAAoB,GAAG,IAAmB,EAAA;IAC/C,QAAA,IAAI,KAAK,KAAK,IAAI,EAAE;IAClB,YAAA,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;;IAG5B,QAAA,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAK;IAC7B,YAAA,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;gBACpB,KAAK,GAAG,IAAI;aACb,EAAE,KAAK,CAAC;IACX,KAAC;IACH;;IC9HA;;IAEG;IACG,MAAO,WAAY,SAAQ,WAAW,CAAA;IAgC1C,IAAA,WAAA,GAAA;IACE,QAAA,KAAK,EAAE;;YAvBD,IAAG,CAAA,GAAA,GAAoC,IAAI;;YAG3C,IAAI,CAAA,IAAA,GAAgB,EAAE;YACtB,IAAS,CAAA,SAAA,GAAe,EAAE;YAC1B,IAAQ,CAAA,QAAA,GAAc,EAAE;IACxB,QAAA,IAAA,CAAA,MAAM,GAAoB,EAAE,GAAG,cAAc,EAAE;;YAG/C,IAAK,CAAA,KAAA,GAAW,CAAC;YACjB,IAAM,CAAA,MAAA,GAAW,CAAC;IAClB,QAAA,IAAA,CAAA,MAAM,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACrD,QAAA,IAAA,CAAA,MAAM,GAAmCA,aAAE,CAAC,WAAW,EAAE;IACzD,QAAA,IAAA,CAAA,MAAM,GAAmCA,aAAE,CAAC,WAAW,EAAE;;YAGzD,IAAiB,CAAA,iBAAA,GAAW,CAAC;YAC7B,IAAW,CAAA,WAAA,GAAkB,IAAI;;IASvC,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;YAGjD,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;YAC7C,KAAK,CAAC,WAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAqCnB;;YAGD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC9C,QAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW;;YAGtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;YACvD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC;;YAGhD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,KAAK,CAAC;;YAGjF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7C,QAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;;IAGvC,QAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;;YAG5D,IAAI,CAAC,mBAAmB,EAAE;;IAG5B;;IAEG;QACH,iBAAiB,GAAA;YACf,IAAI,CAAC,MAAM,EAAE;;IAGf;;IAEG;QACH,oBAAoB,GAAA;;IAElB,QAAA,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;IAC7B,YAAA,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC;IACtC,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI;;;IAI3B;;;IAGG;IACH,IAAA,SAAS,CAAC,MAAgC,EAAA;IACxC,QAAA,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE;;IAG3C,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;gBACjB,IAAI,CAAC,MAAM,GAAG;oBACZ,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG;oBAC1E,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;oBAClF,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;oBACtF,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;iBAC3E;;YAGH,IAAI,CAAC,MAAM,EAAE;IACb,QAAA,OAAO,IAAI;;IAGb;;IAEG;QACH,SAAS,GAAA;IACP,QAAA,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;;IAG3B;;;;IAIG;QACH,kBAAkB,CAAC,MAAe,EAAE,QAAiB,EAAA;IACnD,QAAA,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,MAAM;IACpC,QAAA,IAAI,QAAQ,KAAK,SAAS,EAAE;IAC1B,YAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,QAAQ;;IAE1C,QAAA,OAAO,IAAI;;IAGb;;;IAGG;IACH,IAAA,OAAO,CAAC,IAAiB,EAAA;IACvB,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;;IAGrB,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC;;YAG1B,IAAI,CAAC,YAAY,EAAE;;YAGnB,IAAI,CAAC,MAAM,EAAE;IACb,QAAA,OAAO,IAAI;;IAGb;;;IAGG;IACH,IAAA,YAAY,CAAC,SAAqB,EAAA;IAChC,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,MAAM,EAAE;IACb,QAAA,OAAO,IAAI;;IAGb;;;IAGG;IACH,IAAA,WAAW,CAAC,QAAmB,EAAA;IAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,MAAM,EAAE;IACb,QAAA,OAAO,IAAI;;IAGb;;IAEG;QACH,SAAS,GAAA;IACP,QAAA,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;;IAG3B;;IAEG;QACH,kBAAkB,GAAA;IAChB,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe;;IAGtC;;IAEG;QACH,oBAAoB,GAAA;YAClB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,IAAI,cAAc,CAAC,iBAAkB;;IAG3E;;IAEG;QACH,YAAY,GAAA;YACV,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,cAAc,CAAC,SAAU;;IAG3D;;IAEG;QACH,YAAY,GAAA;YACV,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,cAAc,CAAC,SAAU;;IAG3D;;IAEG;QACH,aAAa,GAAA;YACX,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,cAAc,CAAC,UAAW;;IAGnG;;IAEG;QACH,gBAAgB,GAAA;YACd,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,cAAc,CAAC,aAAc;;IAGnE;;IAEG;QACH,eAAe,GAAA;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,cAAc,CAAC,YAAa;;IAGjE;;IAEG;QACH,OAAO,GAAA;IACL,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;;IAGvB;;IAEG;QACH,YAAY,GAAA;IACV,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;;IAG5B;;IAEG;QACH,WAAW,GAAA;IACT,QAAA,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;;IAG3B;;IAEG;QACH,YAAY,GAAA;YACV,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,cAAc,CAAC,SAAU;;IAG3D;;IAEG;QACK,mBAAmB,GAAA;;IAEzB,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,MAAK;gBAC7C,IAAI,CAAC,eAAe,EAAE;IACxB,SAAC,CAAC;IAEF,QAAA,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC;;YAG5B,IAAI,CAAC,MAAM,EAAE;;IAGf;;IAEG;QACK,MAAM,GAAA;IACZ,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE;IACzC,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;IACvB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;;IAGzB,QAAA,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,gBAAgB;IACjE,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,gBAAgB;IACnE,QAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,GAAG,CAAA,EAAG,IAAI,CAAC,KAAK,CAAA,EAAA,CAAI;IACpD,QAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAA,EAAG,IAAI,CAAC,MAAM,CAAA,EAAA,CAAI;;IAGtD,QAAA,IAAI,IAAI,CAAC,GAAG,EAAE;IACZ,YAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,gBAAgB,CAAC;;;YAIlE,IAAI,CAAC,YAAY,EAAE;;YAGnB,IAAI,CAAC,MAAM,EAAE;;IAGf;;IAEG;QACK,YAAY,GAAA;IAClB,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE;;IAG5B,QAAA,MAAM,OAAO,GAAGA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAqB;IAClE,QAAA,MAAM,OAAO,GAAGA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAqB;;IAGlE,QAAA,IAAI,CAAC,MAAM,GAAGA,aAAE,CAAC,WAAW;iBACzB,MAAM,CAAC,OAAO;IACd,aAAA,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAE5D,QAAA,IAAI,CAAC,MAAM,GAAGA,aAAE,CAAC,WAAW;iBACzB,MAAM,CAAC,OAAO;IACd,aAAA,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;IAG/D;;IAEG;QACK,MAAM,GAAA;YACZ,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE;;IAGzC,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;;IAGjD,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;gBACnC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;;;YAI7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC;IACnE,QAAA,gBAAgB,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;;YAG3C,IAAI,CAAC,eAAe,EAAE;;IAGtB,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;gBAC/B,IAAI,CAAC,cAAc,EAAE;;iBAChB;IACL,YAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,eAAe,EAAE;;;IAI1B;;IAEG;QACK,eAAe,GAAA;;IAErB,QAAAA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;YAEpD,MAAM,CAAC,GAAGA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;;YAGtC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;IAGnC,QAAA,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC;;IAInD,QAAA,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM;IAC7B,aAAA,IAAI,CAAC,OAAO,EAAE,WAAW;IACzB,aAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;IACxC,aAAA,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC;;IAGhC,QAAA,MAAM,YAAY,GAAG,CAAC,IAAY,KAAY;IAC5C,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACnB,OAAQ,QAAQ,CAAC,IAAI,EAAqB,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC;IAClE,SAAC;;YAGD,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;IACxD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;YAG/D,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,GAAG,EAAE;;YAGtD,QAAQ,CAAC,MAAM,EAAE;;IAGjB,QAAA,CAAC,CAAC,SAAS,CAAC,cAAc;iBACvB,IAAI,CAAC,MAAM;IACX,aAAA,KAAK;iBACL,MAAM,CAAC,MAAM;IACb,aAAA,IAAI,CAAC,OAAO,EAAE,aAAa;IAC3B,aAAA,IAAI,CAAC,IAAI,EAAE,aAAa;IACxB,aAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;IACzC,aAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9B,aAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9B,aAAA,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE;IAClC,aAAA,IAAI,CAAC,kBAAkB,EAAE,KAAK;IAC9B,aAAA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;;IAG1B,QAAA,CAAC,CAAC,SAAS,CAAC,eAAe;iBACxB,IAAI,CAAC,MAAM;IACX,aAAA,KAAK;iBACL,MAAM,CAAC,MAAM;IACb,aAAA,IAAI,CAAC,OAAO,EAAE,cAAc;iBAC5B,IAAI,CAAC,GAAG,EAAE,aAAa,GAAE,EAAE,CAAC;IAC5B,aAAA,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7B,aAAA,IAAI,CAAC,IAAI,EAAE,QAAQ;IACnB,aAAA,IAAI,CAAC,aAAa,EAAE,KAAK;IACzB,aAAA,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE;IACpC,aAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;iBACxC,IAAI,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC;;IAGlC,QAAA,CAAC,CAAC,MAAM,CAAC,MAAM;IACZ,aAAA,IAAI,CAAC,OAAO,EAAE,QAAQ;IACtB,aAAA,IAAI,CAAC,IAAI,EAAE,aAAa;IACxB,aAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;IACzC,aAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;IAC3C,aAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;IAC3C,aAAA,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE;IAClC,aAAA,IAAI,CAAC,kBAAkB,EAAE,KAAK;IAC9B,aAAA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;;YAG1B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IAC5B,YAAA,CAAC,CAAC,SAAS,CAAC,WAAW;IACpB,iBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ;IAClB,iBAAA,KAAK;qBACL,MAAM,CAAC,MAAM;IACb,iBAAA,IAAI,CAAC,OAAO,EAAE,UAAU;IACxB,iBAAA,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,iBAAA,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE;IAC/C,iBAAA,IAAI,CAAC,aAAa,EAAE,QAAQ;IAC5B,iBAAA,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE;IACpC,iBAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;qBACxC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;;;IAIzB;;;IAGG;IACK,IAAA,QAAQ,CAAC,QAAgB,EAAA;YAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE;;IAGzC,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,OAAO,EAAE;IACnC,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;;iBACvB;IACL,YAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;;;IAIjC;;;IAGG;IACK,IAAA,cAAc,CAAC,QAAgB,EAAA;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE;;YAGzC,MAAM,CAAC,GAAGA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;YACtC,MAAM,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;IACrC,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;IAGjC,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACxB,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAI/C,QAAA,MAAM,OAAO,GAAG,GAAG,CAAC;YACpB,MAAM,cAAc,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;IAGvD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC/D,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC;IAExD,QAAA,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC;gBAAE;;IAG7B,QAAA,MAAM,cAAc,GAAGA,aAAE,CAAC,WAAW;IAClC,aAAA,MAAM,CAAC,CAACA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAEA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3E,aAAA,KAAK,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;IAGtD,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;IACf,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;YACpB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAElF,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAGpF,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE;IAC1C,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;IACtB,QAAA,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;;IAGjB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;;IAExB,YAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC1G,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACpF,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;;IAGpB,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACvG,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;gBACjC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAG,EAAA,KAAK,CAAI,EAAA,CAAA,CAAC,CAAC;gBACvC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAG,EAAA,KAAK,CAAI,EAAA,CAAA,CAAC,CAAC;IAEvC,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ;IAC7B,YAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;;IAGjB,QAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;;IAGpB;;;IAGG;IACK,IAAA,aAAa,CAAC,QAAgB,EAAA;YACpC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE;;YAGzC,MAAM,CAAC,GAAGA,aAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;YACtC,MAAM,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC;IACrC,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;;IAGjC,QAAA,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACxB,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAI/C,QAAA,MAAM,OAAO,GAAG,GAAG,CAAC;YACpB,MAAM,cAAc,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;IAGvD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC/D,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC;IAExD,QAAA,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC;gBAAE;;IAG7B,QAAA,MAAM,cAAc,GAAGA,aAAE,CAAC,WAAW;IAClC,aAAA,MAAM,CAAC,CAACA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAEA,aAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3E,aAAA,KAAK,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;IAGtD,QAAA,MAAM,IAAI,GAAGA,aAAE,CAAC,IAAI;iBACjB,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,aAAA,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvB,aAAA,KAAK,CAACA,aAAE,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;IAGxC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;IAEnC,QAAA,IAAI,CAAC,QAAQ;gBAAE;;IAGf,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;IACf,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;;IAGpB,QAAA,MAAM,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE;IAC1C,QAAA,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;IACtB,QAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;;IAGrB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;IACxB,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;;IAGpB,YAAA,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;;gBAGrC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC1G,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpF,QAAQ,CAAC,SAAS,EAAE;;IAGpB,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACvG,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;gBACjC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAG,EAAA,KAAK,CAAI,EAAA,CAAA,CAAC,CAAC;gBACvC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAG,EAAA,KAAK,CAAI,EAAA,CAAA,CAAC,CAAC;IAEvC,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ;IAC7B,YAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;;IAGzB,QAAA,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;;IAGpB;;IAEG;QACK,eAAe,GAAA;;YAErB,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAG;gBACnD,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9B,YAAA,QACE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI;oBACrB,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;IACnC,gBAAA,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG;oBACpB,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;IAEzC,SAAC,CAAC;;IAGF,QAAA,cAAc,CAAC,OAAO,CAAC,KAAK,IAAG;gBAC7B,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IACrD,YAAA,eAAe,CAAC,SAAS,GAAG,WAAW;;gBAGvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;;gBAG/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;IAGnC,YAAA,eAAe,CAAC,KAAK,CAAC,IAAI,GAAG,CAAG,EAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;;gBAGxD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IACjD,YAAA,WAAW,CAAC,SAAS,GAAG,WAAW;IACnC,YAAA,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM;IACpC,YAAA,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU;IACvC,YAAA,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ;IACvC,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC;;IAGvC,YAAA,MAAM,aAAa,GAAG,WAAW,CAAC,YAAY;;IAG9C,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC;;IAGvC,YAAA,MAAM,kBAAkB,GAAG,aAAa,GAAG,CAAC;;gBAG5C,MAAM,cAAc,GAAG,CAAC,MAAM,GAAG,MAAM,IAAI,kBAAkB;;IAG7D,YAAA,IAAI,WAAW;gBAEf,IAAI,cAAc,EAAE;;IAElB,gBAAA,WAAW,GAAG,MAAM,GAAG,aAAa;;oBAGpC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;IACjC,oBAAA,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG;;;qBAE1B;;oBAEL,WAAW,GAAG,MAAM;;;gBAItB,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,CAAG,EAAA,WAAW,IAAI;IAE9C,YAAA,eAAe,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM;IAExC,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC;IAC7C,SAAC,CAAC;;IAGJ;;IAEG;QACK,cAAc,GAAA;;IAEpB,QAAA,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;IAC7B,YAAA,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC;IACtC,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI;;;IAIzB,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC;;IAG1B,QAAA,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE;IACnC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,EAAE;;IAG5C,QAAA,MAAM,OAAO,GAAG,CAAC,WAAmB,KAAI;;IAEtC,YAAA,MAAM,OAAO,GAAG,WAAW,GAAG,SAAS;IACvC,YAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,EAAE,CAAC,CAAC;;IAGxD,YAAA,IAAI,IAAI,CAAC,GAAG,EAAE;IACZ,gBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;;;IAInD,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC;;IAGrC,YAAA,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE;IAC9B,gBAAA,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,OAAO,CAAC;;qBAC5C;;oBAEL,IAAI,CAAC,eAAe,EAAE;IACtB,gBAAA,IAAI,CAAC,WAAW,GAAG,IAAI;;IAE3B,SAAC;;IAGD,QAAA,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,OAAO,CAAC;;IAEpD;IAED;IACA,cAAc,CAAC,MAAM,CAAC,eAAe,EAAE,WAAW,CAAC;;;;;;;;;;"}